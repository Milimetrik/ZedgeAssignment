// Generated by Dagger (https://dagger.dev).
package com.engin.zedgeassignment.repository;

import com.engin.zedgeassignment.data.local.ImagesDao;
import com.engin.zedgeassignment.data.remote.ImagesAPI;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DefaultImageRepository_Factory implements Factory<DefaultImageRepository> {
  private final Provider<ImagesDao> imagesDaoProvider;

  private final Provider<ImagesAPI> imagesAPIProvider;

  public DefaultImageRepository_Factory(Provider<ImagesDao> imagesDaoProvider,
      Provider<ImagesAPI> imagesAPIProvider) {
    this.imagesDaoProvider = imagesDaoProvider;
    this.imagesAPIProvider = imagesAPIProvider;
  }

  @Override
  public DefaultImageRepository get() {
    return newInstance(imagesDaoProvider.get(), imagesAPIProvider.get());
  }

  public static DefaultImageRepository_Factory create(Provider<ImagesDao> imagesDaoProvider,
      Provider<ImagesAPI> imagesAPIProvider) {
    return new DefaultImageRepository_Factory(imagesDaoProvider, imagesAPIProvider);
  }

  public static DefaultImageRepository newInstance(ImagesDao imagesDao, ImagesAPI imagesAPI) {
    return new DefaultImageRepository(imagesDao, imagesAPI);
  }
}
