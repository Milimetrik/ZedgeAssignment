// Generated by Dagger (https://dagger.dev).
package com.engin.zedgeassignment.di;

import com.engin.zedgeassignment.data.local.FavouriteImagesDatabase;
import com.engin.zedgeassignment.data.local.ImagesDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideImagesDaoFactory implements Factory<ImagesDao> {
  private final Provider<FavouriteImagesDatabase> databaseProvider;

  public AppModule_ProvideImagesDaoFactory(Provider<FavouriteImagesDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public ImagesDao get() {
    return provideImagesDao(databaseProvider.get());
  }

  public static AppModule_ProvideImagesDaoFactory create(
      Provider<FavouriteImagesDatabase> databaseProvider) {
    return new AppModule_ProvideImagesDaoFactory(databaseProvider);
  }

  public static ImagesDao provideImagesDao(FavouriteImagesDatabase database) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideImagesDao(database));
  }
}
