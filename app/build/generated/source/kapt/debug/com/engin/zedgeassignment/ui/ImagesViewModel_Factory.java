// Generated by Dagger (https://dagger.dev).
package com.engin.zedgeassignment.ui;

import com.engin.zedgeassignment.data.remote.ImagesAPI;
import com.engin.zedgeassignment.repository.ImageRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ImagesViewModel_Factory implements Factory<ImagesViewModel> {
  private final Provider<ImageRepository> repositoryProvider;

  private final Provider<ImagesAPI> imageApiProvider;

  public ImagesViewModel_Factory(Provider<ImageRepository> repositoryProvider,
      Provider<ImagesAPI> imageApiProvider) {
    this.repositoryProvider = repositoryProvider;
    this.imageApiProvider = imageApiProvider;
  }

  @Override
  public ImagesViewModel get() {
    return newInstance(repositoryProvider.get(), imageApiProvider.get());
  }

  public static ImagesViewModel_Factory create(Provider<ImageRepository> repositoryProvider,
      Provider<ImagesAPI> imageApiProvider) {
    return new ImagesViewModel_Factory(repositoryProvider, imageApiProvider);
  }

  public static ImagesViewModel newInstance(ImageRepository repository, ImagesAPI imageApi) {
    return new ImagesViewModel(repository, imageApi);
  }
}
