// Generated by Dagger (https://dagger.dev).
package com.engin.zedgeassignment.adapters;

import com.bumptech.glide.RequestManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ImageAdapter_Factory implements Factory<ImageAdapter> {
  private final Provider<RequestManager> glideProvider;

  public ImageAdapter_Factory(Provider<RequestManager> glideProvider) {
    this.glideProvider = glideProvider;
  }

  @Override
  public ImageAdapter get() {
    return newInstance(glideProvider.get());
  }

  public static ImageAdapter_Factory create(Provider<RequestManager> glideProvider) {
    return new ImageAdapter_Factory(glideProvider);
  }

  public static ImageAdapter newInstance(RequestManager glide) {
    return new ImageAdapter(glide);
  }
}
