// Generated by Dagger (https://dagger.dev).
package com.engin.zedgeassignment.di;

import com.engin.zedgeassignment.data.local.ImagesDao;
import com.engin.zedgeassignment.data.remote.ImagesAPI;
import com.engin.zedgeassignment.repository.ImageRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesDefaultImageRepositoryFactory implements Factory<ImageRepository> {
  private final Provider<ImagesDao> daoProvider;

  private final Provider<ImagesAPI> apiProvider;

  public AppModule_ProvidesDefaultImageRepositoryFactory(Provider<ImagesDao> daoProvider,
      Provider<ImagesAPI> apiProvider) {
    this.daoProvider = daoProvider;
    this.apiProvider = apiProvider;
  }

  @Override
  public ImageRepository get() {
    return providesDefaultImageRepository(daoProvider.get(), apiProvider.get());
  }

  public static AppModule_ProvidesDefaultImageRepositoryFactory create(
      Provider<ImagesDao> daoProvider, Provider<ImagesAPI> apiProvider) {
    return new AppModule_ProvidesDefaultImageRepositoryFactory(daoProvider, apiProvider);
  }

  public static ImageRepository providesDefaultImageRepository(ImagesDao dao, ImagesAPI api) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providesDefaultImageRepository(dao, api));
  }
}
